import util from "util";
import pjson from "../../../package.json";
import messagesData from "../assets/messages";
import symbols from "../assets/symbols";
import config from "../config";
import helperFunctions from "./helperFunctions";
const currentDate = new Date().toLocaleString("ru-RU");

export default {
  msgWelcome: (ctx: any) => {
    const { first_name, last_name } = JSON.parse(ctx);
    return `${messagesData.WelcomeMessage} ${first_name} ${last_name}`;
  },
  msgForbridedenUser: () => {
    return util.format(
      `<b>–û—à–∏–±–∫–∞ %s</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ <u>–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</u> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ê–¥–º–∏–Ω–∏—Ç—Ä–∞—Ç–æ—Ä–æ–º:</i>`,
      symbols.ErrorEmo,
      config.vendor_info.botVendorContact
    );
  },

  msgHandleError: (msg: string | undefined = undefined) => {
    return util.format(
      `<b>–û—à–∏–±–∫–∞ %s</b> <pre>%s</pre><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ê–¥–º–∏–Ω–∏—Ç—Ä–∞—Ç–æ—Ä–æ–º:</i>%s\n\n<i>–í—ã–ø–æ–ª–Ω–µ–Ω–æ:  <code>%s</code></i>`,
      symbols.ErrorEmo,
      msg === undefined ? '–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞' : msg,
      config.vendor_info.botVendorContact,
      currentDate
    );
  },

  msgApiTokenHandleError: (expired: string | undefined = undefined) => {
    if (expired === undefined) {
      // Handle the case where expired is undefined
      return util.format(
        `<b>–û—à–∏–±–∫–∞ %s</b> <pre> –í–∞—à —Ç–æ–∫–µ–Ω —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º.</pre><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω</i>`,
        symbols.ErrorEmo
      );
    }

    const timestamp: number = parseInt(expired, 10);

    if (isNaN(timestamp)) {
      // Handle the case where expired is not a valid number
      return util.format(
        `<b>–û—à–∏–±–∫–∞ %s</b> <pre> –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.</pre><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω</i>`,
        symbols.ErrorEmo
      );
    }

    const dateObject: Date = new Date(timestamp * 1000);

    return util.format(
      `<b>–û—à–∏–±–∫–∞ %s</b> <pre> –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –∏—Å—Ç–µ–∫–ª–æ: %s</pre><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω</i>`,
      symbols.ErrorEmo,
      helperFunctions.get2DigDate(dateObject)
    );
  },

  msgInfo: (context: any) => {
    return `
    ‚ùñ –ò–º—è –±–æ—Ç–∞ : ${context.first_name}
    ‚ùñ –ê–¥—Ä–µ—Å –±–æ—Ç–∞: @${context.username}
    ‚ùñ –í–µ—Ä—Å–∏—è : ${pjson.version}
    ‚ùñ –ò–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ : ${config.vendor_info.botVendor}
    –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏
    üìß  E-Mail: ${config.vendor_info.botVendorEMailContact}
    üïº   Telegram: ${config.vendor_info.botVendorContact}
    ‚úÜ  Watsapp: ${config.vendor_info.botVendorWContact}
    –õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ: ${pjson.license}
    `;
  },
  msgReplyNoIp: (host: any) => {
    return `${symbols.WarnEmo} –≠—Ç–æ –Ω–µ IP: ${host}.\n –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IP –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞`;
  },
  msgNotAllowed: (host: string) => {
    return `${host} ${symbols.DeadEmo} –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞ —Å–≤—è–∑–∏`;
  },
  msgSNMPError: function (host: string) {
    return `${host} –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª SNMP V1/2c`;
  },
};
